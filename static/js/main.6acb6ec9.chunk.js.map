{"version":3,"sources":["img/logoImg.png","components/filmDetailPage/filmDetailPagePresentation.jsx","components/filmDetailPage/filmDetailPageContainer.js","actions/serch.js","actions/film.js","components/card.jsx","components/cardList.jsx","components/menu.jsx","actions/menu.js","components/search.jsx","components/mainPage.jsx","App.js","serviceWorker.js","reducers/film.js","reducers/serch.js","reducers/menu.js","reducers/index.js","index.js","store.js","img/404logolong.png"],"names":["module","exports","FilmDetailPage","props","Segment","inverted","textAlign","style","minHeight","padding","vertical","Grid","container","stackable","verticalAlign","Column","floated","width","Image","rounded","centered","src","filmInf","Poster","size","Button","as","Link","to","backPage","primary","marginTop","Icon","name","Header","fontSize","fontWeight","marginBottom","Title","Plot","Container","Row","List","Item","Content","Year","Runtime","Genre","Writer","Director","Actors","imdbRating","Embed","autoplay","id","video","idYoutubeVideo","placeholder","urlVideoImg","source","iframe","allowFullScreen","FilmDetail","match","useRouteMatch","state","Released","Response","this","path","indexOf","setState","url","params","filmId","fetch","then","result","json","logo404","urlSerchVideo","replace","Type","res","status","error","Error","statusText","response","items","snippet","thumbnails","medium","videoId","catch","e","console","log","message","React","Component","setSerchFilmsString","string","type","payload","setSerchSeriesString","itemsFetchData","inputStr","funcSetItemsToStote","funcSetItemsErrorToStote","page","dispatch","setFilmsLoading","setSeriesLoading","objToStore","found","mas","ok","Search","totalResults","isLoadingDataNow","FilmCard","Card","wrapped","ui","currentURL","imdbID","Meta","className","Description","extra","CardList","films","Group","itemsPerRow","length","map","film","index","key","MenuExampleBasic","handleItemClick","setActivePage","activeItem","activePage","Menu","widths","active","onClick","bind","connect","menu","SearchBar","input","handleClickButton","updateInput","setItems","setItemsError","Input","disabled","fluid","onChange","target","value","action","icon","content","itemFound","subheader","textError","masCollection","filmColection","collection","filmObj","serchStringFilms","serch","seriesObj","series","serchStringSeries","setCollections","setFilms","objectWithFilms","addFilms","setFilmsError","strError","setSeries","objectWithSeries","addSeries","setSeriesError","str","fetchData","logoSite","exact","SerchFilmPage","SerchSeriesPage","basic","Dimmer","isLoading","Loader","preventDefault","Math","ceil","count","minWidth","App","component","Boolean","window","location","hostname","initialState","combineReducers","myAppStore","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,qC,mSCe5B,SAASC,EAAeC,GACrC,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,UAAU,SACVC,MAAO,CAAEC,UAAW,IAAKC,QAAS,WAClCC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAS,EAACC,cAAc,UACtC,kBAACH,EAAA,EAAKI,OAAN,CAAaC,QAAQ,OAAOC,MAAO,GACjC,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,IAAKlB,EAAMmB,QAAQC,OAAQC,KAAK,WACxD,kBAACC,EAAA,EAAD,CACEC,GAAIC,IACJC,GAAIzB,EAAM0B,SACVC,SAAO,EACPN,KAAK,OACLjB,MAAO,CAAEwB,UAAW,UAEpB,kBAACC,EAAA,EAAD,CAAMC,KAAK,eAPb,YAWF,kBAACtB,EAAA,EAAKI,OAAN,CAAaE,MAAO,GAClB,kBAACiB,EAAA,EAAD,CACE7B,UAAQ,EACRqB,GAAG,KACHnB,MAAO,CACL4B,SAAU,MACVC,WAAY,SACZC,aAAc,IAGflC,EAAMmB,QAAQgB,OAEjB,kBAACJ,EAAA,EAAD,CACE7B,UAAQ,EACRqB,GAAG,KACHnB,MAAO,CACL4B,SAAU,QACVC,WAAY,SACZL,UAAW,UAGZ5B,EAAMmB,QAAQiB,SAKvB,kBAACnC,EAAA,EAAD,CAASG,MAAO,CAAEC,UAAW,IAAKC,QAAS,WAAaC,UAAQ,GAC9D,kBAAC8B,EAAA,EAAD,KACE,kBAAC7B,EAAA,EAAD,CAAME,WAAS,EAACC,cAAc,UAC5B,kBAACH,EAAA,EAAK8B,IAAN,KACE,kBAAC9B,EAAA,EAAKI,OAAN,CAAaE,MAAO,GAClB,kBAACiB,EAAA,EAAD,CAAQR,GAAG,KAAKnB,MAAO,CAAE4B,SAAU,QAAnC,0BAGA,kBAACO,EAAA,EAAD,CAAMlB,KAAK,QACT,kBAACkB,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKV,KAAN,CAAWC,KAAK,uBAChB,kBAACS,EAAA,EAAKE,QAAN,KAC0B,QAAvBzC,EAAMmB,QAAQuB,KACX,kBACA1C,EAAMmB,QAAQuB,OAGtB,kBAACH,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKV,KAAN,CAAWC,KAAK,SAChB,kBAACS,EAAA,EAAKE,QAAN,KAC6B,QAA1BzC,EAAMmB,QAAQwB,QACX,qBACA3C,EAAMmB,QAAQwB,UAGtB,kBAACJ,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKV,KAAN,CAAWC,KAAK,UAChB,kBAACS,EAAA,EAAKE,QAAN,KAC2B,QAAxBzC,EAAMmB,QAAQyB,MACX,qBACA5C,EAAMmB,QAAQyB,MAAO,MAG7B,kBAACL,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKV,KAAN,CAAWC,KAAK,iBAChB,kBAACS,EAAA,EAAKE,QAAN,KAC4B,QAAzBzC,EAAMmB,QAAQ0B,OACX,oBACA7C,EAAMmB,QAAQ0B,OAAQ,MAG9B,kBAACN,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKV,KAAN,CAAWC,KAAK,eAChB,kBAACS,EAAA,EAAKE,QAAN,KAC8B,QAA3BzC,EAAMmB,QAAQ2B,SACX,sBACA9C,EAAMmB,QAAQ2B,SAAU,MAGhC,kBAACP,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKV,KAAN,CAAWC,KAAK,UAChB,kBAACS,EAAA,EAAKE,QAAN,KAC4B,QAAzBzC,EAAMmB,QAAQ4B,OACX,qBACA/C,EAAMmB,QAAQ4B,OAAQ,MAG9B,kBAACR,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKV,KAAN,CAAWC,KAAK,SAChB,kBAACS,EAAA,EAAKE,QAAN,KACgC,QAA7BzC,EAAMmB,QAAQ6B,WACX,oBACAhD,EAAMmB,QAAQ6B,WAAY,QAKtC,kBAACxC,EAAA,EAAKI,OAAN,CAAaE,MAAO,EAAGD,QAAQ,SAC7B,kBAACoC,EAAA,EAAD,CACE7C,MAAO,CAAEU,MAAO,QAChBoC,UAAU,EACVC,GAAInD,EAAMoD,MAAMC,eAChBC,YAAatD,EAAMoD,MAAMG,YACzBC,OAAO,UACPC,OAAQ,CACNC,iBAAiB,WCpItB,SAASC,IACtB,IAAIC,EAAQC,cAEZ,OAAO,kBAAC,EAAD,CAAgBD,MAAOA,IAGzB,IAAM7D,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,MAAQ,CACX3C,QAAS,CACPgB,MAAO,GACPO,KAAM,kBACNqB,SAAU,0BACVpB,QAAS,qBACTC,MAAO,oBACPE,SAAU,sBACVD,OAAQ,oBACRE,OAAQ,oBACRX,KAAM,2BACNhB,OAAQ,MACR4B,WAAY,qBAEdgB,SAAU,MACVtC,SAAU,kBACV0B,MAAO,CACLG,YAAa,GACbF,eAAgB,KApBH,EADrB,gEA0BuB,IAAD,QAE8B,IAA5CY,KAAKjE,MAAM4D,MAAMM,KAAKC,QAAQ,SAChCF,KAAKG,SAAS,CACZ1C,SAAU,0BAE0C,IAA7CuC,KAAKjE,MAAM4D,MAAMM,KAAKC,QAAQ,WACvCF,KAAKG,SAAS,CACZ1C,SAAU,0BAKd,IAAM2C,EAAG,qDAAiDJ,KAAKjE,MAAM4D,MAAMU,OAAOC,OAAzE,cACTC,MAAMH,GACHI,MAAK,SAACC,GAEL,OAAOA,EAAOC,UAEfF,MAAK,SAACE,GAEL,GAAsB,SAAlBA,EAAKX,SAAqB,CAC5B,EAAKI,SAAS,CACZjD,QAAS,CACPgB,MAAOwC,EAAKxC,MACZO,KAAMiC,EAAKjC,KACXqB,SAAUY,EAAKZ,SACfpB,QAASgC,EAAKhC,QACdC,MAAO+B,EAAK/B,MACZE,SAAU6B,EAAK7B,SACfD,OAAQ8B,EAAK9B,OACbE,OAAQ4B,EAAK5B,OACbX,KACgB,QAAduC,EAAKvC,KAAiB,2BAA6BuC,EAAKvC,KAC1DhB,OAAwB,QAAhBuD,EAAKvD,OAAmBwD,IAAUD,EAAKvD,OAC/C4B,WAAY2B,EAAK3B,YAGnBgB,SAAUW,EAAKX,WAIjB,IAAMa,EAAa,mFAA+EF,EAAKxC,MAAM2C,QAC3G,KACA,KAFiB,mBAGO,QAAdH,EAAKjC,KAAiB,GAAK,IAAMiC,EAAKjC,KAH/B,YAIjBiC,EAAKI,KAJY,2DAMnBP,MAAMK,GACHJ,MAAK,SAACO,GACL,GAAIA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,IACpC,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAMH,EAAII,YAE1B,MADAF,EAAMG,SAAWL,EACXE,KAWTT,MAAK,SAACO,GAAD,OAASA,EAAIL,UAClBF,MAAK,SAACE,GAEL,EAAKP,SAAS,CACZhB,MAAO,CACLG,YAAaoB,EAAKW,MAAM,GAAGC,QAAQC,WAAWC,OAAOpB,IACrDhB,eAAgBsB,EAAKW,MAAM,GAAGnC,GAAGuC,cAItCC,OAAM,SAACC,GACNC,QAAQC,IAAI,sBAAwBF,EAAEG,SACtCF,QAAQC,IAAIF,EAAEP,kBAIlB,EAAKjB,SAAS,CACZJ,SAAUW,EAAKX,cAIpB2B,OAAM,SAACT,GAAD,OAAWW,QAAQC,IAAI,2BAA4BZ,QAjHhE,+BAwHI,OACE,kBAAC,EAAD,CACE/D,QAAS8C,KAAKH,MAAM3C,QACpBiC,MAAOa,KAAKH,MAAMV,MAClB1B,SAAUuC,KAAKH,MAAMpC,eA5H7B,GAAoCsE,IAAMC,W,4CCb7BC,EAAsB,SAACC,GAAD,MAAa,CAC9CC,KAAM,yBACNC,QAASF,IAGEG,EAAuB,SAACH,GAAD,MAAa,CAC/CC,KAAM,0BACNC,QAASF,IC+BJ,SAASI,EACdC,EACAC,EACAC,GAGC,IAFDC,EAEA,uDAFO,EACPP,EACA,uDADO,QAEP,OAAO,SAACQ,GAEN,GAAiB,KAAbJ,EAAiB,CAEN,IAATG,GAEAC,EADW,UAATR,EACOF,EAAoBM,GAEpBF,EAAqBE,IAIhCI,EADW,UAATR,EACOS,GAAgB,GAEhBC,GAAiB,IAG5BN,EAAWA,EAAS1B,QAAQ,KAAM,KAClC,IAAMT,EAAG,qDAAiDmC,EAAjD,iBAAkEG,EAAlE,iBAA+EP,GAGpFW,EAAa,CACfC,MAAO,IACPC,IAAK,IAGPzC,MAAMH,GACHI,MAAK,SAACC,GACL,IAAKA,EAAOwC,GACV,MAAM/B,MAAMT,EAAOU,YAOrB,OAJEwB,EADW,UAATR,EACOS,GAAgB,GAEhBC,GAAiB,IAErBpC,EAAOC,UAEfF,MAAK,SAACE,GAEiB,SAAlBA,EAAKX,UACP+C,EAAWE,IAAMtC,EAAKwC,OACtBJ,EAAWC,MAAQrC,EAAKyC,aACxBX,EAAoBM,IAEpBL,EAAyB/B,EAAKQ,UAGjCQ,OAAM,SAACT,GAAD,OAAWW,QAAQC,IAAI,2BAA4BZ,QAK3D,IAAM2B,EAAkB,SAACQ,GAAD,MAAuB,CACpDjB,KAAM,oBACNC,QAASgB,IAGEP,EAAmB,SAACO,GAAD,MAAuB,CACrDjB,KAAM,qBACNC,QAASgB,I,SCjEIC,EAjCE,SAACtH,GAAD,OACf,kBAACuH,EAAA,EAAD,KACE,kBAACxG,EAAA,EAAD,CACEG,IAAsB,QAAjBlB,EAAMoB,OAAmBwD,IAAU5E,EAAMoB,OAC9CoG,SAAO,EACPC,IAAI,IAEN,kBAACF,EAAA,EAAK9E,QAAN,KACE,kBAAC8E,EAAA,EAAKxF,OAAN,KACE,kBAAC,IAAD,CAAMN,GAAE,UAAKzB,EAAM0H,WAAX,YAAyB1H,EAAM2H,SACpB,QAAhB3H,EAAMmC,MAAkB,sBAAwBnC,EAAMmC,QAG3D,kBAACoF,EAAA,EAAKK,KAAN,KACE,0BAAMC,UAAU,QAAhB,uBAAwC7H,EAAM0C,QAEhD,kBAAC6E,EAAA,EAAKO,YAAN,OAEF,kBAACP,EAAA,EAAK9E,QAAN,CAAcsF,OAAK,GACjB,kBAAClG,EAAA,EAAD,CAAMC,KAAK,SADb,WAEO9B,EAAM+E,SCWFiD,EAhCE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOP,EAAV,EAAUA,WAAV,OACf,kBAACH,EAAA,EAAKW,MAAN,CAAYC,YAAa,EAAGzH,WAAS,GAClCuH,GAASA,EAAMG,OACZH,EAAMI,KAAI,SAACC,EAAMC,GACf,OACE,kBAAC,EAAD,CACEC,IAAG,UAAKD,EAAL,YAAcD,EAAKX,QACtBxF,MAAOmG,EAAKnG,MACZO,KAAM4F,EAAK5F,KACXiF,OAAQW,EAAKX,OACb5C,KAAMuD,EAAKvD,KACX3D,OAAQkH,EAAKlH,OACbsG,WAAYA,OAIlB,M,SCdKe,EAAb,4MACEC,gBAAkB,SAAC5G,GACjB,EAAK9B,MAAM2I,cAAc7G,IAF7B,uDAMI,IAAM8G,EAAa3E,KAAKjE,MAAM6I,WAE9B,OACE,kBAACC,EAAA,EAAD,CAAMC,OAAQ,EAAGrI,WAAW,GAC1B,kBAACoI,EAAA,EAAKtG,KAAN,CACEjB,GAAIC,IACJC,GAAG,kBACHK,KAAK,cACLkH,OAAuB,gBAAfJ,EACRK,QAAShF,KAAKyE,gBAAgBQ,KAAKjF,KAAM,gBAL3C,kBAUA,kBAAC6E,EAAA,EAAKtG,KAAN,CACEjB,GAAIC,IACJC,GAAG,uBACHK,KAAK,QACLkH,OAAuB,UAAfJ,EACRK,QAAShF,KAAKyE,gBAAgBQ,KAAKjF,KAAM,UAL3C,gBAUA,kBAAC6E,EAAA,EAAKtG,KAAN,CACEjB,GAAIC,IACJC,GAAG,wBACHK,KAAK,SACLkH,OAAuB,WAAfJ,EACRK,QAAShF,KAAKyE,gBAAgBQ,KAAKjF,KAAM,WAL3C,sBA9BR,GAAsCgC,aAsDvBkD,eALS,SAACrF,GAEvB,MAAO,CAAE+E,WADc/E,EAAMsF,KAArBP,cAI8B,CAAEF,cC9Db,SAACxC,GAAD,MAAa,CACxCC,KAAM,kBACNC,QAASF,KD4DIgD,CAA4CV,G,iBErD9CY,EAAb,kDACE,WAAYrJ,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,MAAQ,CAAEwF,MAAO,IAEtB,EAAKC,kBAAoB,EAAKA,kBAAkBL,KAAvB,gBACzB,EAAKM,YAAc,EAAKA,YAAYN,KAAjB,gBALF,EADrB,wDAScI,GACVrF,KAAKG,SAAS,CAAEkF,YAVpB,0CAcIrF,KAAKjE,MAAMuG,eACTtC,KAAKH,MAAMwF,MACXrF,KAAKjE,MAAMyJ,SACXxF,KAAKjE,MAAM0J,cACX,EACAzF,KAAKjE,MAAMoG,MAGbnC,KAAKG,SAAS,CAAEkF,MAAO,OAtB3B,+BAyBY,IAAD,OACP,OACE,yBAAKzB,UAAU,kBACb,kBAAC8B,EAAA,EAAD,CACEC,UAAU,EACVC,OAAK,EACLxI,KAAK,QACLyI,SAAU,SAAClE,GAAD,OAAO,EAAK4D,YAAY5D,EAAEmE,OAAOC,QAC3CA,MAAO/F,KAAKH,MAAMwF,MAClBW,OACE,kBAAC3I,EAAA,EAAD,CACEuG,UAAU,MACVoB,QAAShF,KAAKsF,kBACdW,KAAK,WAGT5G,YAAY,cAEd,kBAACvB,EAAA,EAAD,CACER,GAAG,KACH4I,QAAO,mBAAclG,KAAKjE,MAAMoK,UAAzB,SACPC,UAAWpG,KAAKjE,MAAMsK,iBA9ChC,GAA+BtE,IAAMC,WA4DtBkD,cAAQ,KAAM,CAAE5C,kBAAhB4C,CAAkCE,GC+BjD,IAqCeF,eArCS,SAACrF,GAUvB,MAAO,CACLyG,cAToBzG,EAAM0G,cAAcC,WAAWxD,IAUnDyD,QARc5G,EAAM0G,cAAcvC,MASlC0C,iBARuB7G,EAAM8G,MAAMD,iBASnCE,UAPgB/G,EAAM0G,cAAcM,OAQpCC,kBAPwBjH,EAAM8G,MAAMG,sBAYb,SAACnE,GAAD,MAAe,CACxCoE,eAAgB,SAAC/C,GAAD,OAAWrB,ENvHgB,CAC3CR,KAAM,iBACNC,QMqHmD4B,KAEnDgD,SAAU,SAACC,GAAD,OAAqBtE,ENpHT,SAACsE,GAAD,MAAsB,CAC5C9E,KAAM,YACNC,QAAS6E,GMkH+BD,CAASC,KACjDC,SAAU,SAACD,GAAD,OAAqBtE,ENhHT,SAACsE,GAAD,MAAsB,CAC5C9E,KAAM,YACNC,QAAS6E,GM8G+BC,CAASD,KACjDE,cAAe,SAACC,GAAD,OAAczE,EN5GF,SAACyE,GAAD,MAAe,CAC1CjF,KAAM,kBACNC,QAASgF,GM0G6BD,CAAcC,KAEpDC,UAAW,SAACC,GAAD,OAAsB3E,ENzGY,CAC7CR,KAAM,aACNC,QMuGoDkF,KACpDC,UAAW,SAACD,GAAD,OAAsB3E,ENrGY,CAC7CR,KAAM,aACNC,QMmGoDkF,KACpDE,eAAgB,SAACJ,GAAD,OAAczE,ENjGF,SAACyE,GAAD,MAAe,CAC3CjF,KAAM,mBACNC,QAASgF,GM+F8BI,CAAeJ,KAEtDnF,oBAAqB,SAACwF,GAAD,OAAS9E,EAASV,EAAoBwF,KAC3DpF,qBAAsB,SAACoF,GAAD,OAAS9E,EAASN,EAAqBoF,KAC7DC,UAAW,SAAC7J,EAAM2H,EAAUC,EAAe/C,EAAMP,GAAtC,OACTQ,EAASL,EAAezE,EAAM2H,EAAUC,EAAe/C,EAAMP,QAGlD+C,EA1GR,SAAkBnJ,GAGvB,OACE,kBAACqC,EAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAOE,UAAQ,EAACC,IAAK0K,MACrB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAC3H,KAAK,wBAChB,kBAAC,EAAD,CACEkG,UAAWpK,EAAM0K,QAAQ1D,MACzBsD,UAAWtK,EAAM0K,QAAQJ,UACzBb,SAAUzJ,EAAMiL,SAChBvB,cAAe1J,EAAMoL,cACrBhF,KAAK,UAEP,kBAAC0F,EAAD,CACEpB,QAAS1K,EAAM0K,QACfO,SAAUjL,EAAMmL,SAChBC,cAAepL,EAAMoL,cACrBT,iBAAkB3K,EAAM2K,iBACxBgB,UAAW3L,EAAM2L,aAGrB,kBAAC,IAAD,CAAOE,OAAK,EAAC3H,KAAK,yBAChB,kBAAC,EAAD,CACEkG,UAAWpK,EAAM6K,UAAU7D,MAC3BsD,UAAWtK,EAAM6K,UAAUP,UAC3Bb,SAAUzJ,EAAMsL,UAChB5B,cAAe1J,EAAMyL,eACrBrF,KAAK,WAEP,kBAAC2F,EAAD,CACErB,QAAS1K,EAAM6K,UACfI,SAAUjL,EAAMwL,UAChBJ,cAAepL,EAAMyL,eACrBd,iBAAkB3K,EAAM+K,kBACxBY,UAAW3L,EAAM2L,aAGrB,kBAAC,IAAD,CAAOE,OAAK,EAAC3H,KAAK,mBAChB,kBAAC,EAAD,CACE+D,MAAOjI,EAAMuK,cACb7C,WAAW,oCAiEhB,SAASoE,EAAc9L,GAC5B,IAAI4D,EAAQC,cAaZ,OACE,6BACE,kBAAC5D,EAAA,EAAD,CAAS+L,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAQjD,OAAQhJ,EAAM0K,QAAQwB,UAAWhM,UAAQ,GAC/C,kBAACiM,EAAA,EAAD,CAAQjM,UAAQ,GAAhB,YAEF,kBAAC,EAAD,CAAU+H,MAAOjI,EAAM0K,QAAQzD,IAAKS,WAAU,UAAK9D,EAAMS,QAG3D,kBAACpE,EAAA,EAAD,CAAS+L,OAAK,EAAC7L,UAAU,UACvB,kBAACmB,EAAA,EAAD,CACE2H,QAtBR,SAAqBrD,GACnBA,EAAEwG,iBAEFpM,EAAM2L,UACJ3L,EAAM2K,iBACN3K,EAAMiL,SACNjL,EAAMoL,cACNiB,KAAKC,KAAKtM,EAAM0K,QAAQ6B,MAAQ,IAAM,IAgBlC3C,SAAU5J,EAAM0K,QAAQ6B,OAASvM,EAAM0K,QAAQ1D,MAC/CrF,SAAO,EACPN,KAAK,OACLjB,MAAO,CAAEwB,UAAW,QAAS4K,SAAU,OAAQtK,aAAc,SAE5D,IAPH,OAQO,OAkBR,SAAS6J,EAAgB/L,GAC9B,IAAI4D,EAAQC,cAcZ,OACE,6BACE,kBAAC5D,EAAA,EAAD,CAAS+L,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAQjD,OAAQhJ,EAAM0K,QAAQwB,UAAWhM,UAAQ,GAC/C,kBAACiM,EAAA,EAAD,CAAQjM,UAAQ,GAAhB,YAEF,kBAAC,EAAD,CAAU+H,MAAOjI,EAAM0K,QAAQzD,IAAKS,WAAU,UAAK9D,EAAMS,QAG3D,kBAACpE,EAAA,EAAD,CAAS+L,OAAK,EAAC7L,UAAU,UACvB,kBAACmB,EAAA,EAAD,CACE2H,QAvBR,SAAqBrD,GACnBA,EAAEwG,iBAEFpM,EAAM2L,UACJ3L,EAAM2K,iBACN3K,EAAMiL,SACNjL,EAAMoL,cACNiB,KAAKC,KAAKtM,EAAM0K,QAAQ6B,MAAQ,IAAM,EACtC,WAgBI3C,SAAU5J,EAAM0K,QAAQ6B,OAASvM,EAAM0K,QAAQ1D,MAC/CrF,SAAO,EACPN,KAAK,OACLjB,MAAO,CAAEwB,UAAW,QAAS4K,SAAU,OAAQtK,aAAc,SAE5D,IAPH,OAQO,O,ICjMAuK,E,uKAjBX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOvI,KAAK,gCAAgCwI,UAAW/I,IACvD,kBAAC,IAAD,CAAOO,KAAK,+BAA+BwI,UAAW/I,IACtD,kBAAC,IAAD,CACEO,KAAK,oCACLwI,UAAW/I,IAEb,kBAAC,IAAD,CAAOO,KAAK,mBACV,kBAAC,EAAD,Y,GAbQ8B,IAAMC,WCIJ0G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlJ,MACvB,2D,qCClBOmJ,GAAe,CAC1B9E,MAAO,CACLjB,MAAO,IACPuF,MAAO,EACPtF,IAAK,GACLqD,UAAW,GACX4B,WAAW,GAEbpB,OAAQ,CACN9D,MAAO,IACPuF,MAAO,EACPtF,IAAK,GACLqD,UAAW,GACX4B,WAAW,GAEbzB,WAAY,CACVxD,IAAK,CACH,CACE9E,MAAO,cACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,8IAEJ,CACEe,MAAO,oBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,UACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,eACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,cACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,iBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,iBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,kGAEJ,CACEe,MAAO,QACPO,KAAM,iBACNiF,OAAQ,YACR5C,KAAM,SACN3D,OACE,sIAEJ,CACEe,MAAO,aACPO,KAAM,iBACNiF,OAAQ,YACR5C,KAAM,SACN3D,OACE,sIAEJ,CACEe,MAAO,aACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,YACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,eACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,kGAGJ,CACEe,MAAO,wCACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,0CACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,kGAEJ,CACEe,MAAO,2CACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,sCACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,4CACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,kGAEJ,CACEe,MAAO,+CACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,yCACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,+CACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAGJ,CACEe,MAAO,WACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,aACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,8IAEJ,CACEe,MAAO,4BACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,wBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAGJ,CACEe,MAAO,sBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,yBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,0BACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,uCACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,qCACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,gCACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAGJ,CACEe,MAAO,YACPO,KAAM,iBACNiF,OAAQ,YACR5C,KAAM,SACN3D,OACE,sGAEJ,CACEe,MAAO,UACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,oBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,qBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,iBACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sIAEJ,CACEe,MAAO,eACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,wCACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,WACPO,KAAM,OACNiF,OAAQ,YACR5C,KAAM,QACN3D,OACE,sGAEJ,CACEe,MAAO,8CACPO,KAAM,iBACNiF,OAAQ,YACR5C,KAAM,SACN3D,OACE,sIAEJ,CACEe,MAAO,6BACPO,KAAM,iBACNiF,OAAQ,YACR5C,KAAM,SACN3D,OACE,yICnVJ2L,GAAe,CACnBpC,iBAAkB,GAClBI,kBAAmB,ICFfgC,GAAe,CACnBlE,WAAY,eCICmE,eAAgB,CAC7BxC,cHmVa,WAAmC,IAAlC1G,EAAiC,uDAAzBiJ,GAAc9C,EAAW,uCAC/C,OAAQA,EAAO7D,MACb,IAAK,iBACH,OAAO,6BACFtC,GADL,IAEE2G,WAAW,6BACN3G,EAAM2G,YADD,IAERxD,IAAI,YAAKgD,EAAO5D,aAGtB,IAAK,YACH,OAAO,6BACFvC,GADL,IAEEmE,MAAM,6BACDnE,EAAMmE,OADN,IAEHhB,IAAI,GAAD,mBAAMnD,EAAMmE,MAAMhB,KAAlB,YAA0BgD,EAAO5D,QAAQY,MAC5CsF,MAAOtC,EAAO5D,QAAQY,IAAImB,OAAStE,EAAMmE,MAAMsE,MAC/CjC,UAAW,OAGjB,IAAK,YACH,OAAO,6BACFxG,GADL,IAEEmE,MAAM,6BACDnE,EAAMmE,OADN,IAEHjB,MAAOiD,EAAO5D,QAAQW,MACtBC,IAAI,YAAKgD,EAAO5D,QAAQY,KACxBsF,MAAOtC,EAAO5D,QAAQY,IAAImB,OAC1BkC,UAAW,OAGjB,IAAK,kBACH,OAAO,6BACFxG,GADL,IAEEmE,MAAM,6BACDnE,EAAMmE,OADN,IAEHjB,MAAO,IACPuF,MAAO,EACPtF,IAAK,GACLqD,UAAWL,EAAO5D,YAGxB,IAAK,aACH,OAAO,6BACFvC,GADL,IAEEgH,OAAO,6BACFhH,EAAMgH,QADL,IAEJ7D,IAAI,GAAD,mBAAMnD,EAAMgH,OAAO7D,KAAnB,YAA2BgD,EAAO5D,QAAQY,MAC7CsF,MAAOtC,EAAO5D,QAAQY,IAAImB,OAAStE,EAAMgH,OAAOyB,MAChDjC,UAAW,OAGjB,IAAK,aACH,OAAO,6BACFxG,GADL,IAEEgH,OAAO,6BACFhH,EAAMgH,QADL,IAEJ9D,MAAOiD,EAAO5D,QAAQW,MACtBC,IAAI,YAAKgD,EAAO5D,QAAQY,KACxBsF,MAAOtC,EAAO5D,QAAQY,IAAImB,OAC1BkC,UAAW,OAGjB,IAAK,mBACH,OAAO,6BACFxG,GADL,IAEEgH,OAAO,6BACFhH,EAAMgH,QADL,IAEJ9D,MAAO,IACPuF,MAAO,EACPtF,IAAK,GACLqD,UAAWL,EAAO5D,YAGxB,IAAK,oBACH,OAAO,6BACFvC,GADL,IAEEmE,MAAM,6BACDnE,EAAMmE,OADN,IAEHiE,UAAWjC,EAAO5D,YAGxB,IAAK,qBACH,OAAO,6BACFvC,GADL,IAEEgH,OAAO,6BACFhH,EAAMgH,QADL,IAEJoB,UAAWjC,EAAO5D,YAGxB,QACE,OAAOvC,IG7aX8G,MFFa,WAAmC,IAAlC9G,EAAiC,uDAAzBiJ,GAAc9C,EAAW,uCAC/C,OAAQA,EAAO7D,MACb,IAAK,yBACH,OAAO,6BACFtC,GADL,IAEE6G,iBAAkBV,EAAO5D,UAE7B,IAAK,0BACH,OAAO,6BACFvC,GADL,IAEEiH,kBAAmBd,EAAO5D,UAG9B,QACE,OAAOvC,IEXXsF,KDJa,WAAmC,IAAlCtF,EAAiC,uDAAzBiJ,GAAc9C,EAAW,uCAC/C,OAAQA,EAAO7D,MACb,IAAK,kBACH,OAAO,6BACFtC,GADL,IAEE+E,WAAYoB,EAAO5D,UAGvB,QACE,OAAOvC,MEJPmJ,GCDUC,YAAYC,GAAaC,YAAgBC,MDGzDC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOP,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJQ,SAASC,eAAe,SLkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpJ,MAAK,SAACqJ,GACLA,EAAaC,gBAEdpI,OAAM,SAACT,GACNW,QAAQX,MAAMA,EAAMa,a,mBOzI5BlG,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.6acb6ec9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoImg.f12fd653.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Segment,\r\n  Container,\r\n  Header,\r\n  Image,\r\n  Grid,\r\n  Button,\r\n  Icon,\r\n  List,\r\n  Embed\r\n} from 'semantic-ui-react';\r\n\r\nexport default function FilmDetailPage(props) {\r\n  return (\r\n    <div>\r\n      <Segment\r\n        inverted\r\n        textAlign=\"center\"\r\n        style={{ minHeight: 500, padding: '8em 0em' }}\r\n        vertical\r\n      >\r\n        <Grid container stackable verticalAlign=\"middle\">\r\n          <Grid.Column floated=\"left\" width={6}>\r\n            <Image rounded centered src={props.filmInf.Poster} size=\"medium\" />\r\n            <Button\r\n              as={Link}\r\n              to={props.backPage}\r\n              primary\r\n              size=\"huge\"\r\n              style={{ marginTop: '1.5em' }}\r\n            >\r\n              <Icon name=\"left arrow\" />\r\n              Go back\r\n            </Button>\r\n          </Grid.Column>\r\n          <Grid.Column width={8}>\r\n            <Header\r\n              inverted\r\n              as=\"h1\"\r\n              style={{\r\n                fontSize: '3em',\r\n                fontWeight: 'normal',\r\n                marginBottom: 0\r\n              }}\r\n            >\r\n              {props.filmInf.Title}\r\n            </Header>\r\n            <Header\r\n              inverted\r\n              as=\"h2\"\r\n              style={{\r\n                fontSize: '1.7em',\r\n                fontWeight: 'normal',\r\n                marginTop: '1.5em'\r\n              }}\r\n            >\r\n              {props.filmInf.Plot}\r\n            </Header>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment style={{ minHeight: 500, padding: '2em 0em' }} vertical>\r\n        <Container>\r\n          <Grid stackable verticalAlign=\"middle\">\r\n            <Grid.Row>\r\n              <Grid.Column width={6}>\r\n                <Header as=\"h3\" style={{ fontSize: '2em' }}>\r\n                  Additional information\r\n                </Header>\r\n                <List size=\"huge\">\r\n                  <List.Item>\r\n                    <List.Icon name=\"calendar alternate\" />\r\n                    <List.Content>\r\n                      {props.filmInf.Year === 'N/A'\r\n                        ? 'Year is unknown'\r\n                        : props.filmInf.Year}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"time\" />\r\n                    <List.Content>\r\n                      {props.filmInf.Runtime === 'N/A'\r\n                        ? 'Runtime is unknown'\r\n                        : props.filmInf.Runtime}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"video\" />\r\n                    <List.Content>\r\n                      {props.filmInf.Genre === 'N/A'\r\n                        ? 'Genres are unknown'\r\n                        : props.filmInf.Genre}{' '}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"address book\" />\r\n                    <List.Content>\r\n                      {props.filmInf.Writer === 'N/A'\r\n                        ? 'Writer is unknown'\r\n                        : props.filmInf.Writer}{' '}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"hand paper\" />\r\n                    <List.Content>\r\n                      {props.filmInf.Director === 'N/A'\r\n                        ? 'Director is unknown'\r\n                        : props.filmInf.Director}{' '}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"users\" />\r\n                    <List.Content>\r\n                      {props.filmInf.Actors === 'N/A'\r\n                        ? 'Actors are unknown'\r\n                        : props.filmInf.Actors}{' '}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <List.Icon name=\"star\" />\r\n                    <List.Content>\r\n                      {props.filmInf.imdbRating === 'N/A'\r\n                        ? 'Rating is unknown'\r\n                        : props.filmInf.imdbRating}{' '}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                </List>\r\n              </Grid.Column>\r\n              <Grid.Column width={8} floated=\"right\">\r\n                <Embed\r\n                  style={{ width: 'auto' }}\r\n                  autoplay={true}\r\n                  id={props.video.idYoutubeVideo}\r\n                  placeholder={props.video.urlVideoImg}\r\n                  source=\"youtube\"\r\n                  iframe={{\r\n                    allowFullScreen: true\r\n                  }}\r\n                />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Container>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\nFilmDetailPage.propTypes = {\r\n  filmInf: PropTypes.object.isRequired,\r\n  video: PropTypes.object.isRequired,\r\n  backPage: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport logo404 from '../../img/404logolong.png';\r\nimport FilmDetailPagePresentation from './filmDetailPagePresentation';\r\n\r\nexport default function FilmDetail() {\r\n  let match = useRouteMatch();\r\n\r\n  return <FilmDetailPage match={match}></FilmDetailPage>;\r\n}\r\n\r\nexport class FilmDetailPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filmInf: {\r\n        Title: '',\r\n        Year: 'Year is unknown',\r\n        Released: 'Release date is unknown',\r\n        Runtime: 'Runtime is unknown',\r\n        Genre: 'Genres is unknown',\r\n        Director: 'Director is unknown',\r\n        Writer: 'Writer is unknown',\r\n        Actors: 'Actors is unknown',\r\n        Plot: \"Describe isn't available\",\r\n        Poster: 'N/A',\r\n        imdbRating: 'Rating is unknown'\r\n      },\r\n      Response: 'N/A',\r\n      backPage: '/firstReactApp/',\r\n      video: {\r\n        urlVideoImg: '',\r\n        idYoutubeVideo: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //зберігаємо сторінку з якої прийшли\r\n    if (this.props.match.path.indexOf('films') !== -1) {\r\n      this.setState({\r\n        backPage: '/firstReactApp/films'\r\n      });\r\n    } else if (this.props.match.path.indexOf('series') !== -1) {\r\n      this.setState({\r\n        backPage: '/firstReactApp/series'\r\n      });\r\n    }\r\n\r\n    //витягуємо данні\r\n    const url = `https://www.omdbapi.com/?apikey=27156496&i=${this.props.match.params.filmId}&plot=full`;\r\n    fetch(url)\r\n      .then((result) => {\r\n        //console.log(result);\r\n        return result.json();\r\n      })\r\n      .then((json) => {\r\n        //console.log(json);\r\n        if (json.Response === 'True') {\r\n          this.setState({\r\n            filmInf: {\r\n              Title: json.Title,\r\n              Year: json.Year,\r\n              Released: json.Released,\r\n              Runtime: json.Runtime,\r\n              Genre: json.Genre,\r\n              Director: json.Director,\r\n              Writer: json.Writer,\r\n              Actors: json.Actors,\r\n              Plot:\r\n                json.Plot === 'N/A' ? \"Describe isn't available\" : json.Plot,\r\n              Poster: json.Poster === 'N/A' ? logo404 : json.Poster,\r\n              imdbRating: json.imdbRating\r\n            },\r\n\r\n            Response: json.Response\r\n          });\r\n\r\n          //serch video on YouTube\r\n          const urlSerchVideo = `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&q=${json.Title.replace(\r\n            / /g,\r\n            '+'\r\n          )}+trailer${json.Year === 'N/A' ? '' : '+' + json.Year}+${\r\n            json.Type\r\n          }&type=video&key=AIzaSyDbvAZjWhs15-sw8XRVAzguPtIYYwqg7XE`;\r\n          fetch(urlSerchVideo)\r\n            .then((res) => {\r\n              if (res.status >= 200 && res.status < 300) {\r\n                return res;\r\n              } else {\r\n                let error = new Error(res.statusText);\r\n                error.response = res;\r\n                throw error;\r\n              }\r\n            })\r\n            /*.then((res) => {\r\n              if (res.headers['content-type'] !== 'application/json') {\r\n                let error = new Error('Некорректный ответ от сервера');\r\n                error.response = res;\r\n                throw error;\r\n              }\r\n              return res;\r\n            })*/\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n              //console.log(json);\r\n              this.setState({\r\n                video: {\r\n                  urlVideoImg: json.items[0].snippet.thumbnails.medium.url,\r\n                  idYoutubeVideo: json.items[0].id.videoId\r\n                }\r\n              });\r\n            })\r\n            .catch((e) => {\r\n              console.log('Youtube API Error: ' + e.message);\r\n              console.log(e.response);\r\n            });\r\n          //.catch((error) => console.log('*****Fatch failed***** :', error));\r\n        } else {\r\n          this.setState({\r\n            Response: json.Response\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.log('*****Fatch failed***** :', error));\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.state);\r\n    //console.log(this.props.match);\r\n\r\n    return (\r\n      <FilmDetailPagePresentation\r\n        filmInf={this.state.filmInf}\r\n        video={this.state.video}\r\n        backPage={this.state.backPage}\r\n      />\r\n    );\r\n  }\r\n}\r\nFilmDetailPage.propTypes = {\r\n  match: PropTypes.object.isRequired\r\n};\r\n","export const setSerchFilmsString = (string) => ({\r\n  type: 'SET_SERCH_FILMS_STRING',\r\n  payload: string\r\n});\r\n\r\nexport const setSerchSeriesString = (string) => ({\r\n  type: 'SET_SERCH_SERIES_STRING',\r\n  payload: string\r\n});\r\n","import { setSerchFilmsString, setSerchSeriesString } from './serch';\r\n\r\nexport const setCollections = (masfilms) => ({\r\n  type: 'SET_COLLECTION',\r\n  payload: masfilms\r\n});\r\n//-------------------------------------------------\r\nexport const setFilms = (objectWithFilms) => ({\r\n  type: 'SET_FILMS',\r\n  payload: objectWithFilms\r\n});\r\n\r\nexport const addFilms = (objectWithFilms) => ({\r\n  type: 'ADD_FILMS',\r\n  payload: objectWithFilms\r\n});\r\n\r\nexport const setFilmsError = (strError) => ({\r\n  type: 'SET_FILMS_ERROR',\r\n  payload: strError\r\n});\r\n//-------------------------------------------------\r\nexport const setSeries = (objectWithFilms) => ({\r\n  type: 'SET_SERIES',\r\n  payload: objectWithFilms\r\n});\r\n\r\nexport const addSeries = (objectWithFilms) => ({\r\n  type: 'ADD_SERIES',\r\n  payload: objectWithFilms\r\n});\r\n\r\nexport const setSeriesError = (strError) => ({\r\n  type: 'SET_SERIES_ERROR',\r\n  payload: strError\r\n});\r\n//-------------------------------------------------\r\n\r\nexport function itemsFetchData(\r\n  inputStr,\r\n  funcSetItemsToStote,\r\n  funcSetItemsErrorToStote,\r\n  page = 1,\r\n  type = 'movie'\r\n) {\r\n  return (dispatch) => {\r\n    //робимо запит на OMD та зберігаємо данні в Store\r\n    if (inputStr !== '') {\r\n      //зберігаємо стрічку пошуку в Store\r\n      if (page === 1) {\r\n        if (type === 'movie') {\r\n          dispatch(setSerchFilmsString(inputStr));\r\n        } else {\r\n          dispatch(setSerchSeriesString(inputStr));\r\n        }\r\n      }\r\n      if (type === 'movie') {\r\n        dispatch(setFilmsLoading(true));\r\n      } else {\r\n        dispatch(setSeriesLoading(true));\r\n      }\r\n\r\n      inputStr = inputStr.replace(/ /g, '+');\r\n      const url = `https://www.omdbapi.com/?apikey=27156496&s=${inputStr}&page=${page}&type=${type}`;\r\n      //console.log(`request: ${url}`);\r\n\r\n      let objToStore = {\r\n        found: '0',\r\n        mas: []\r\n      };\r\n\r\n      fetch(url)\r\n        .then((result) => {\r\n          if (!result.ok) {\r\n            throw Error(result.statusText);\r\n          }\r\n          if (type === 'movie') {\r\n            dispatch(setFilmsLoading(false));\r\n          } else {\r\n            dispatch(setSeriesLoading(false));\r\n          }\r\n          return result.json();\r\n        })\r\n        .then((json) => {\r\n          //console.log(json);\r\n          if (json.Response === 'True') {\r\n            objToStore.mas = json.Search;\r\n            objToStore.found = json.totalResults;\r\n            funcSetItemsToStote(objToStore);\r\n          } else {\r\n            funcSetItemsErrorToStote(json.Error);\r\n          }\r\n        })\r\n        .catch((error) => console.log('*****Fatch failed***** :', error));\r\n    }\r\n  };\r\n}\r\n\r\nexport const setFilmsLoading = (isLoadingDataNow) => ({\r\n  type: 'SET_FILMS_LOADING',\r\n  payload: isLoadingDataNow\r\n});\r\n\r\nexport const setSeriesLoading = (isLoadingDataNow) => ({\r\n  type: 'SET_SERIES_LOADING',\r\n  payload: isLoadingDataNow\r\n});\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport logo404 from '../img/404logolong.png';\r\n\r\nconst FilmCard = (props) => (\r\n  <Card>\r\n    <Image\r\n      src={props.Poster === 'N/A' ? logo404 : props.Poster}\r\n      wrapped\r\n      ui={false}\r\n    />\r\n    <Card.Content>\r\n      <Card.Header>\r\n        <Link to={`${props.currentURL}/${props.imdbID}`}>\r\n          {props.Title === 'N/A' ? 'Film name not found' : props.Title}\r\n        </Link>\r\n      </Card.Header>\r\n      <Card.Meta>\r\n        <span className=\"date\">{`Published in ${props.Year}`}</span>\r\n      </Card.Meta>\r\n      <Card.Description></Card.Description>\r\n    </Card.Content>\r\n    <Card.Content extra>\r\n      <Icon name=\"film\" />\r\n      {` ${props.Type}`}\r\n    </Card.Content>\r\n  </Card>\r\n);\r\nFilmCard.propTypes = {\r\n  Poster: PropTypes.string.isRequired,\r\n  imdbID: PropTypes.string.isRequired,\r\n  Title: PropTypes.string.isRequired,\r\n  Year: PropTypes.string.isRequired,\r\n  Type: PropTypes.string.isRequired,\r\n  currentURL: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FilmCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nimport FilmCard from './card';\r\n\r\nconst CardList = ({ films, currentURL }) => (\r\n  <Card.Group itemsPerRow={4} stackable>\r\n    {films && films.length\r\n      ? films.map((film, index) => {\r\n          return (\r\n            <FilmCard\r\n              key={`${index}-${film.imdbID}`}\r\n              Title={film.Title}\r\n              Year={film.Year}\r\n              imdbID={film.imdbID}\r\n              Type={film.Type}\r\n              Poster={film.Poster}\r\n              currentURL={currentURL}\r\n            />\r\n          );\r\n        })\r\n      : ' '}\r\n  </Card.Group>\r\n);\r\nCardList.propTypes = {\r\n  films: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      Poster: PropTypes.string.isRequired,\r\n      imdbID: PropTypes.string.isRequired,\r\n      Title: PropTypes.string.isRequired,\r\n      Year: PropTypes.string.isRequired,\r\n      Type: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  currentURL: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CardList;\r\n//export default connect(mapStateToProps)(CardList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nimport { setActivePage } from '../actions/menu';\r\n\r\nexport class MenuExampleBasic extends Component {\r\n  handleItemClick = (name) => {\r\n    this.props.setActivePage(name);\r\n  };\r\n\r\n  render() {\r\n    const activeItem = this.props.activePage;\r\n\r\n    return (\r\n      <Menu widths={3} stackable={true}>\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/firstReactApp/\"\r\n          name=\"collections\"\r\n          active={activeItem === 'collections'}\r\n          onClick={this.handleItemClick.bind(this, 'collections')}\r\n        >\r\n          My collections\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/firstReactApp/films\"\r\n          name=\"films\"\r\n          active={activeItem === 'films'}\r\n          onClick={this.handleItemClick.bind(this, 'films')}\r\n        >\r\n          Search films\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/firstReactApp/series\"\r\n          name=\"series\"\r\n          active={activeItem === 'series'}\r\n          onClick={this.handleItemClick.bind(this, 'series')}\r\n        >\r\n          Search series\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nMenuExampleBasic.propTypes = {\r\n  setActivePage: PropTypes.func.isRequired,\r\n  activePage: PropTypes.string.isRequired\r\n};\r\n\r\n//Функція зв'язує redux state з props\r\nconst mapStateToProps = (state) => {\r\n  const { activePage } = state.menu;\r\n  return { activePage };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setActivePage })(MenuExampleBasic);\r\n","export const setActivePage = (string) => ({\r\n  type: 'SET_ACTIVE_PAGE',\r\n  payload: string\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, Button, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { itemsFetchData } from '../actions/film';\r\n\r\n//import { setFilms, setFilmsError } from '../actions/film';\r\n\r\nexport class SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { input: '' };\r\n\r\n    this.handleClickButton = this.handleClickButton.bind(this);\r\n    this.updateInput = this.updateInput.bind(this);\r\n  }\r\n\r\n  updateInput(input) {\r\n    this.setState({ input });\r\n  }\r\n\r\n  handleClickButton() {\r\n    this.props.itemsFetchData(\r\n      this.state.input,\r\n      this.props.setItems,\r\n      this.props.setItemsError,\r\n      1,\r\n      this.props.type\r\n    );\r\n    //обнуляємо форму вводу\r\n    this.setState({ input: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SerchContainer\">\r\n        <Input\r\n          disabled={false}\r\n          fluid\r\n          size=\"large\"\r\n          onChange={(e) => this.updateInput(e.target.value)}\r\n          value={this.state.input}\r\n          action={\r\n            <Button\r\n              className=\"lll\"\r\n              onClick={this.handleClickButton}\r\n              icon=\"search\"\r\n            ></Button>\r\n          }\r\n          placeholder=\"Search...\"\r\n        />\r\n        <Header\r\n          as=\"h4\"\r\n          content={`We found ${this.props.itemFound} item`}\r\n          subheader={this.props.textError}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSearchBar.propTypes = {\r\n  setItems: PropTypes.func.isRequired,\r\n  setItemsError: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  itemFound: PropTypes.string.isRequired,\r\n  textError: PropTypes.string.isRequired\r\n};\r\n\r\nexport default connect(null, { itemsFetchData })(SearchBar);\r\n//export default InputExampleActionIconButton;\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Container,\r\n  Image,\r\n  Button,\r\n  Segment,\r\n  Dimmer,\r\n  Loader\r\n} from 'semantic-ui-react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport logoSite from '../img/logoImg.png';\r\n\r\nimport {\r\n  setCollections,\r\n  setFilms,\r\n  addFilms,\r\n  setFilmsError,\r\n  setSeries,\r\n  addSeries,\r\n  setSeriesError,\r\n  itemsFetchData\r\n} from '../actions/film';\r\nimport { setSerchFilmsString, setSerchSeriesString } from '../actions/serch';\r\n\r\nimport CardList from './cardList';\r\nimport Menu from './menu';\r\nimport SearchBar from './search';\r\n\r\nexport function mainPage(props) {\r\n  //let match = useRouteMatch();\r\n\r\n  return (\r\n    <Container>\r\n      <Image centered src={logoSite} />\r\n      <Menu />\r\n      <Switch>\r\n        <Route exact path=\"/firstReactApp/films\">\r\n          <SearchBar\r\n            itemFound={props.filmObj.found}\r\n            textError={props.filmObj.textError}\r\n            setItems={props.setFilms}\r\n            setItemsError={props.setFilmsError}\r\n            type=\"movie\"\r\n          />\r\n          <SerchFilmPage\r\n            filmObj={props.filmObj}\r\n            setFilms={props.addFilms}\r\n            setFilmsError={props.setFilmsError}\r\n            serchStringFilms={props.serchStringFilms}\r\n            fetchData={props.fetchData}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/firstReactApp/series\">\r\n          <SearchBar\r\n            itemFound={props.seriesObj.found}\r\n            textError={props.seriesObj.textError}\r\n            setItems={props.setSeries}\r\n            setItemsError={props.setSeriesError}\r\n            type=\"series\"\r\n          />\r\n          <SerchSeriesPage\r\n            filmObj={props.seriesObj}\r\n            setFilms={props.addSeries}\r\n            setFilmsError={props.setSeriesError}\r\n            serchStringFilms={props.serchStringSeries}\r\n            fetchData={props.fetchData}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/firstReactApp/\">\r\n          <CardList\r\n            films={props.masCollection}\r\n            currentURL=\"/firstReactApp/collection\"\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\nmainPage.propTypes = {\r\n  filmObj: PropTypes.object.isRequired,\r\n  setFilms: PropTypes.func.isRequired,\r\n  setFilmsError: PropTypes.func.isRequired,\r\n  setSerchFilmsString: PropTypes.func.isRequired,\r\n  addFilms: PropTypes.func.isRequired,\r\n  serchStringFilms: PropTypes.string.isRequired,\r\n\r\n  seriesObj: PropTypes.object.isRequired,\r\n  setSeries: PropTypes.func.isRequired,\r\n  setSeriesError: PropTypes.func.isRequired,\r\n  setSerchSeriesString: PropTypes.func.isRequired,\r\n  addSeries: PropTypes.func.isRequired,\r\n  serchStringSeries: PropTypes.string.isRequired,\r\n\r\n  masCollection: PropTypes.array.isRequired\r\n};\r\n\r\n//Функція зв'язує redux state з props\r\nconst mapStateToProps = (state) => {\r\n  //Фільми з колекції які завантажуються статично\r\n  const masCollection = state.filmColection.collection.mas;\r\n  //Фільми які завантажуються динамічно\r\n  const filmObj = state.filmColection.films;\r\n  const serchStringFilms = state.serch.serchStringFilms;\r\n  //Серіали які завантажуються динамічно\r\n  const seriesObj = state.filmColection.series;\r\n  const serchStringSeries = state.serch.serchStringSeries;\r\n\r\n  return {\r\n    masCollection,\r\n    filmObj,\r\n    serchStringFilms,\r\n    seriesObj,\r\n    serchStringSeries\r\n  };\r\n};\r\n\r\n//Функція зв'язує actions з props\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCollections: (films) => dispatch(setCollections(films)),\r\n\r\n  setFilms: (objectWithFilms) => dispatch(setFilms(objectWithFilms)),\r\n  addFilms: (objectWithFilms) => dispatch(addFilms(objectWithFilms)),\r\n  setFilmsError: (strError) => dispatch(setFilmsError(strError)),\r\n\r\n  setSeries: (objectWithSeries) => dispatch(setSeries(objectWithSeries)),\r\n  addSeries: (objectWithSeries) => dispatch(addSeries(objectWithSeries)),\r\n  setSeriesError: (strError) => dispatch(setSeriesError(strError)),\r\n\r\n  setSerchFilmsString: (str) => dispatch(setSerchFilmsString(str)),\r\n  setSerchSeriesString: (str) => dispatch(setSerchSeriesString(str)),\r\n  fetchData: (name, setItems, setItemsError, page, type) =>\r\n    dispatch(itemsFetchData(name, setItems, setItemsError, page, type))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(mainPage);\r\n\r\nexport function SerchFilmPage(props) {\r\n  let match = useRouteMatch();\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    //console.log('По ссылке кликнули.');\r\n    props.fetchData(\r\n      props.serchStringFilms,\r\n      props.setFilms,\r\n      props.setFilmsError,\r\n      Math.ceil(props.filmObj.count / 10) + 1\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Segment basic>\r\n        <Dimmer active={props.filmObj.isLoading} inverted>\r\n          <Loader inverted>Loading</Loader>\r\n        </Dimmer>\r\n        <CardList films={props.filmObj.mas} currentURL={`${match.url}`} />\r\n      </Segment>\r\n\r\n      <Segment basic textAlign=\"center\">\r\n        <Button\r\n          onClick={handleClick}\r\n          disabled={props.filmObj.count >= props.filmObj.found}\r\n          primary\r\n          size=\"huge\"\r\n          style={{ marginTop: '0.5em', minWidth: '10em', marginBottom: '50px' }}\r\n        >\r\n          {' '}\r\n          More{' '}\r\n        </Button>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\nSerchFilmPage.propTypes = {\r\n  filmObj: PropTypes.shape({\r\n    mas: PropTypes.array,\r\n    count: PropTypes.number,\r\n    found: PropTypes.string,\r\n    isLoading: PropTypes.bool\r\n  }),\r\n  serchStringFilms: PropTypes.string.isRequired,\r\n  setFilms: PropTypes.func.isRequired,\r\n  setFilmsError: PropTypes.func.isRequired\r\n};\r\n\r\nexport function SerchSeriesPage(props) {\r\n  let match = useRouteMatch();\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    //console.log('По ссылке кликнули.');\r\n    props.fetchData(\r\n      props.serchStringFilms,\r\n      props.setFilms,\r\n      props.setFilmsError,\r\n      Math.ceil(props.filmObj.count / 10) + 1,\r\n      'series'\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Segment basic>\r\n        <Dimmer active={props.filmObj.isLoading} inverted>\r\n          <Loader inverted>Loading</Loader>\r\n        </Dimmer>\r\n        <CardList films={props.filmObj.mas} currentURL={`${match.url}`} />\r\n      </Segment>\r\n\r\n      <Segment basic textAlign=\"center\">\r\n        <Button\r\n          onClick={handleClick}\r\n          disabled={props.filmObj.count >= props.filmObj.found}\r\n          primary\r\n          size=\"huge\"\r\n          style={{ marginTop: '0.5em', minWidth: '10em', marginBottom: '50px' }}\r\n        >\r\n          {' '}\r\n          More{' '}\r\n        </Button>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\nSerchSeriesPage.propTypes = {\r\n  filmObj: PropTypes.shape({\r\n    mas: PropTypes.array,\r\n    count: PropTypes.number,\r\n    found: PropTypes.string,\r\n    isLoading: PropTypes.bool\r\n  }),\r\n  serchStringFilms: PropTypes.string.isRequired,\r\n  setFilms: PropTypes.func.isRequired,\r\n  setFilmsError: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport FilmDetail from './components/filmDetailPage/filmDetailPageContainer';\r\nimport MainPage from './components/mainPage';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    //console.log(this.props);\r\n\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/firstReactApp/series/:filmId\" component={FilmDetail} />\r\n        <Route path=\"/firstReactApp/films/:filmId\" component={FilmDetail} />\r\n        <Route\r\n          path=\"/firstReactApp/collection/:filmId\"\r\n          component={FilmDetail}\r\n        />\r\n        <Route path=\"/firstReactApp/\">\r\n          <MainPage />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  films: {\r\n    found: '0',\r\n    count: 0,\r\n    mas: [],\r\n    textError: '',\r\n    isLoading: false\r\n  },\r\n  series: {\r\n    found: '0',\r\n    count: 0,\r\n    mas: [],\r\n    textError: '',\r\n    isLoading: false\r\n  },\r\n  collection: {\r\n    mas: [\r\n      {\r\n        Title: 'Vanilla Sky',\r\n        Year: '2001',\r\n        imdbID: 'tt0259711',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BYzFlMTJjYzUtMWFjYy00NjkyLTg1Y2EtYmZkMjdlOGQ1ZGYwL2ltYWdlXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Nocturnal Animals',\r\n        Year: '2016',\r\n        imdbID: 'tt4550098',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTYwMzMwMzgxNl5BMl5BanBnXkFtZTgwMTA0MTUzMDI@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Titanic',\r\n        Year: '1997',\r\n        imdbID: 'tt0120338',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMDdmZGU3NDQtY2E5My00ZTliLWIzOTUtMTY4ZGI1YjdiNjk3XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Interstellar',\r\n        Year: '2014',\r\n        imdbID: 'tt0816692',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BZjdkOTU3MDktN2IxOS00OGEyLWFmMjktY2FiMmZkNWIyODZiXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'The Martian',\r\n        Year: '2015',\r\n        imdbID: 'tt3659388',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTc2MTQ3MDA1Nl5BMl5BanBnXkFtZTgwODA3OTI4NjE@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Risky Business',\r\n        Year: '1983',\r\n        imdbID: 'tt0086200',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMjVhNDE4YmQtNzBlMy00YTdkLTkwNTEtZGRmMDVkMmYwYjA5XkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Eyes Wide Shut',\r\n        Year: '1999',\r\n        imdbID: 'tt0120663',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMjA5NTUwNjI1N15BMl5BanBnXkFtZTYwOTE1ODc5._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'House',\r\n        Year: '2004–2012',\r\n        imdbID: 'tt0412142',\r\n        Type: 'series',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMDA4NjQzN2ItZDhhNC00ZjVlLWFjNTgtMTEyNDQyOGNjMDE1XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Elementary',\r\n        Year: '2012–2019',\r\n        imdbID: 'tt2191671',\r\n        Type: 'series',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMDEyN2U1YTItNDY1Zi00YjljLWI5YzItNWU3YWViYjhiZTgxXkEyXkFqcGdeQXVyNjg4NzAyOTA@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Braveheart',\r\n        Year: '1995',\r\n        imdbID: 'tt0112573',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMzkzMmU0YTYtOWM3My00YzBmLWI0YzctOGYyNTkwMWE5MTJkXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'The Thing',\r\n        Year: '2011',\r\n        imdbID: 'tt0905372',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTMxMjI0MzUyNl5BMl5BanBnXkFtZTcwNjc1NzE5NQ@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Pearl Harbor',\r\n        Year: '2001',\r\n        imdbID: 'tt0213149',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTQ3MDc0MDc1NF5BMl5BanBnXkFtZTYwODI1ODY2._V1_SX300.jpg'\r\n      },\r\n\r\n      {\r\n        Title: \"Harry Potter and the Sorcerer's Stone\",\r\n        Year: '2001',\r\n        imdbID: 'tt0241527',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BNjQ3NWNlNmQtMTE5ZS00MDdmLTlkZjUtZTBlM2UxMGFiMTU3XkEyXkFqcGdeQXVyNjUwNzk3NDc@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Harry Potter and the Chamber of Secrets',\r\n        Year: '2002',\r\n        imdbID: 'tt0295297',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTcxODgwMDkxNV5BMl5BanBnXkFtZTYwMDk2MDg3._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Harry Potter and the Prisoner of Azkaban',\r\n        Year: '2004',\r\n        imdbID: 'tt0304141',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTY4NTIwODg0N15BMl5BanBnXkFtZTcwOTc0MjEzMw@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Harry Potter and the Goblet of Fire',\r\n        Year: '2005',\r\n        imdbID: 'tt0330373',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTI1NDMyMjExOF5BMl5BanBnXkFtZTcwOTc4MjQzMQ@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Harry Potter and the Order of the Phoenix',\r\n        Year: '2007',\r\n        imdbID: 'tt0373889',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTM0NTczMTUzOV5BMl5BanBnXkFtZTYwMzIxNTg3._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Harry Potter and the Deathly Hallows: Part 1',\r\n        Year: '2010',\r\n        imdbID: 'tt0926084',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTQ2OTE1Mjk0N15BMl5BanBnXkFtZTcwODE3MDAwNA@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Harry Potter and the Half-Blood Prince',\r\n        Year: '2009',\r\n        imdbID: 'tt0417741',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BNzU3NDg4NTAyNV5BMl5BanBnXkFtZTcwOTg2ODg1Mg@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Harry Potter and the Deathly Hallows: Part 2',\r\n        Year: '2011',\r\n        imdbID: 'tt1201607',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMjIyZGU4YzUtNDkzYi00ZDRhLTljYzctYTMxMDQ4M2E0Y2YxXkEyXkFqcGdeQXVyNTIzOTk5ODM@._V1_SX300.jpg'\r\n      },\r\n\r\n      {\r\n        Title: 'Die Hard',\r\n        Year: '1988',\r\n        imdbID: 'tt0095016',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BZjRlNDUxZjAtOGQ4OC00OTNlLTgxNmQtYTBmMDgwZmNmNjkxXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Die Hard 2',\r\n        Year: '1990',\r\n        imdbID: 'tt0099423',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMzMzYzk3ZTEtZDg0My00MTY5LWE3ZmQtYzNhYjhjN2RhZGRjL2ltYWdlXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Die Hard with a Vengeance',\r\n        Year: '1995',\r\n        imdbID: 'tt0112864',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BZjI0ZWFiMmQtMjRlZi00ZmFhLWI4NmYtMjQ5YmY0MzIyMzRiXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Live Free or Die Hard',\r\n        Year: '2007',\r\n        imdbID: 'tt0337978',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BNDQxMDE1OTg4NV5BMl5BanBnXkFtZTcwMTMzOTQzMw@@._V1_SX300.jpg'\r\n      },\r\n\r\n      {\r\n        Title: 'Mission: Impossible',\r\n        Year: '1996',\r\n        imdbID: 'tt0117060',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTc3NjI2MjU0Nl5BMl5BanBnXkFtZTgwNDk3ODYxMTE@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Mission: Impossible II',\r\n        Year: '2000',\r\n        imdbID: 'tt0120755',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BOThhNTA1YjItYzk2Ny00M2Y1LWJlYWUtZDQyZDU0YmY5Y2M5XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Mission: Impossible III',\r\n        Year: '2006',\r\n        imdbID: 'tt0317919',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BN2RkYWVkZDQtNTMxMi00NWQ4LWE2ODctNmQzOWM2NjQzYzdlXkEyXkFqcGdeQXVyMjUzOTY1NTc@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Mission: Impossible - Ghost Protocol',\r\n        Year: '2011',\r\n        imdbID: 'tt1229238',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTY4MTUxMjQ5OV5BMl5BanBnXkFtZTcwNTUyMzg5Ng@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Mission: Impossible - Rogue Nation',\r\n        Year: '2015',\r\n        imdbID: 'tt2381249',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BOTFmNDA3ZjMtN2Y0MC00NDYyLWFlY2UtNTQ4OTQxMmY1NmVjXkEyXkFqcGdeQXVyNTg4NDQ4NDY@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Mission: Impossible - Fallout',\r\n        Year: '2018',\r\n        imdbID: 'tt4912910',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BNjRlZmM0ODktY2RjNS00ZDdjLWJhZGYtNDljNWZkMGM5MTg0XkEyXkFqcGdeQXVyNjAwMjI5MDk@._V1_SX300.jpg'\r\n      },\r\n\r\n      {\r\n        Title: 'Lie to Me',\r\n        Year: '2009–2011',\r\n        imdbID: 'tt1235099',\r\n        Type: 'series',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTc2MjA4MTM2OV5BMl5BanBnXkFtZTcwMTYzMzA1Mg@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Top Gun',\r\n        Year: '1986',\r\n        imdbID: 'tt0092099',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BZjQxYTA3ODItNzgxMy00N2Y2LWJlZGMtMTRlM2JkZjI1ZDhhXkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Top Gun: Maverick',\r\n        Year: '2020',\r\n        imdbID: 'tt1745960',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BNTEyYTA5YWYtYmIxYS00NWRlLWExNjMtNjliZmVlZDgxNTBlXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Mad Max: Fury Road',\r\n        Year: '2015',\r\n        imdbID: 'tt1392190',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BN2EwM2I5OWMtMGQyMi00Zjg1LWJkNTctZTdjYTA4OGUwZjMyXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: \"Ocean's Eleven\",\r\n        Year: '2001',\r\n        imdbID: 'tt0240772',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BYzVmYzVkMmUtOGRhMi00MTNmLThlMmUtZTljYjlkMjNkMjJkXkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Jack Reacher',\r\n        Year: '2012',\r\n        imdbID: 'tt0790724',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTM1NjUxMDI3OV5BMl5BanBnXkFtZTcwNjg1ODM3OA@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Eternal Sunshine of the Spotless Mind',\r\n        Year: '2004',\r\n        imdbID: 'tt0338013',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTY4NzcwODg3Nl5BMl5BanBnXkFtZTcwNTEwOTMyMw@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Oblivion',\r\n        Year: '2013',\r\n        imdbID: 'tt1483013',\r\n        Type: 'movie',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMTQwMDY0MTA4MF5BMl5BanBnXkFtZTcwNzI3MDgxOQ@@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'The Adventures of Jimmy Neutron: Boy Genius',\r\n        Year: '1998–2006',\r\n        imdbID: 'tt0320808',\r\n        Type: 'series',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BMWRlNTRkM2ItNDkwMC00ZjNmLWI2ZDQtNWI0MTllMGU5OTVjXkEyXkFqcGdeQXVyNTUyMzE4Mzg@._V1_SX300.jpg'\r\n      },\r\n      {\r\n        Title: 'Avatar: The Last Airbender',\r\n        Year: '2005–2008',\r\n        imdbID: 'tt0417299',\r\n        Type: 'series',\r\n        Poster:\r\n          'https://m.media-amazon.com/images/M/MV5BODc5YTBhMTItMjhkNi00ZTIxLWI0YjAtNTZmOTY0YjRlZGQ0XkEyXkFqcGdeQXVyODUwNjEzMzg@._V1_SX300.jpg'\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_COLLECTION':\r\n      return {\r\n        ...state,\r\n        collection: {\r\n          ...state.collection,\r\n          mas: [...action.payload]\r\n        }\r\n      };\r\n    case 'ADD_FILMS':\r\n      return {\r\n        ...state,\r\n        films: {\r\n          ...state.films,\r\n          mas: [...state.films.mas, ...action.payload.mas],\r\n          count: action.payload.mas.length + state.films.count,\r\n          textError: ''\r\n        }\r\n      };\r\n    case 'SET_FILMS':\r\n      return {\r\n        ...state,\r\n        films: {\r\n          ...state.films,\r\n          found: action.payload.found,\r\n          mas: [...action.payload.mas],\r\n          count: action.payload.mas.length,\r\n          textError: ''\r\n        }\r\n      };\r\n    case 'SET_FILMS_ERROR':\r\n      return {\r\n        ...state,\r\n        films: {\r\n          ...state.films,\r\n          found: '0',\r\n          count: 0,\r\n          mas: [],\r\n          textError: action.payload\r\n        }\r\n      };\r\n    case 'ADD_SERIES':\r\n      return {\r\n        ...state,\r\n        series: {\r\n          ...state.series,\r\n          mas: [...state.series.mas, ...action.payload.mas],\r\n          count: action.payload.mas.length + state.series.count,\r\n          textError: ''\r\n        }\r\n      };\r\n    case 'SET_SERIES':\r\n      return {\r\n        ...state,\r\n        series: {\r\n          ...state.series,\r\n          found: action.payload.found,\r\n          mas: [...action.payload.mas],\r\n          count: action.payload.mas.length,\r\n          textError: ''\r\n        }\r\n      };\r\n    case 'SET_SERIES_ERROR':\r\n      return {\r\n        ...state,\r\n        series: {\r\n          ...state.series,\r\n          found: '0',\r\n          count: 0,\r\n          mas: [],\r\n          textError: action.payload\r\n        }\r\n      };\r\n    case 'SET_FILMS_LOADING':\r\n      return {\r\n        ...state,\r\n        films: {\r\n          ...state.films,\r\n          isLoading: action.payload\r\n        }\r\n      };\r\n    case 'SET_SERIES_LOADING':\r\n      return {\r\n        ...state,\r\n        series: {\r\n          ...state.series,\r\n          isLoading: action.payload\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  serchStringFilms: '',\r\n  serchStringSeries: ''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_SERCH_FILMS_STRING':\r\n      return {\r\n        ...state,\r\n        serchStringFilms: action.payload\r\n      };\r\n    case 'SET_SERCH_SERIES_STRING':\r\n      return {\r\n        ...state,\r\n        serchStringSeries: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  activePage: 'collections'\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_ACTIVE_PAGE':\r\n      return {\r\n        ...state,\r\n        activePage: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport film from './film';\r\nimport serch from './serch';\r\nimport menu from './menu';\r\n//Об'єднуємо усі redusers\r\nexport default combineReducers({\r\n  filmColection: film,\r\n  serch: serch,\r\n  menu: menu\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAppStore from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst myAppStore = createAppStore();\n\nReactDOM.render(\n  <Provider store={myAppStore}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\n//import { logger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n//Створюємо Store і додаємо до нього посередників\r\nexport default () => {\r\n  //const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n  const store = createStore(rootReducer, applyMiddleware(thunk));\r\n  return store;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/404logolong.8a67a3bc.png\";"],"sourceRoot":""}